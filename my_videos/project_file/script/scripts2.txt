很多人认为矩阵只是一堆枯燥的数字表格
Many people think that matrices are just boring tables of numbers.

但是矩阵其实没那么无聊，甚至很有意思
However, matrices are not so dull and can be very interesting.

这个视频就让我们来揭秘矩阵的三重身份
In this video, let's unveil the three roles of matrices.

矩阵，它既是数据仓库，可以帮你存储信息
A matrix is a data repository that helps store information.

它又是空间建筑师，可以用来构建高维空间
It is also a spatial architect that can construct higher-dimensional spaces.

它还是魔法师，能施展线性变换的魔法
And it is a wizard capable of performing linear transformation magic.

先来看它的第一个身份,数据仓库
Let's first look at its first role: the data repository.

比如，在求解线性方程组时
For example, when solving systems of linear equations,

它能整齐地存储所有系数，以方便后续求解
it neatly stores all coefficients for convenient solving.

这个我们都知道
This is something we all know.

再举个例子
Here's another example.

我有这样一个很长的矩阵
I have a long matrix like this.

每个列向量都代表一个坐标点
Each column vector represents a coordinate point.

如果我们能把这些列向量都画出来
If we can visualize these column vectors,

就能解码出这个矩阵所存储的信息
we can decode the information stored in the matrix.

我们用一个点表示一个坐标
We use a point to represent each coordinate.

当然，只要这个矩阵足够长
Of course, as long as the matrix is long enough,

就能存储更多的点
it can store more points.

将点连成线，哦，原来它存储了一个图片
Connecting the points reveals that it stored an image.

当我们给它上色后，就能拆分出三张红绿蓝通道的图片
When we color it, we can separate three RGB channel images.

这种像素化的图像也可以重新用矩阵存储起来
These pixelated images can also be stored back into a matrix.

矩阵的第二个身份是空间的建构师
The second role of a matrix is the spatial architect.

简单来说，一个矩阵的列向量通过线性组合，可以张成一个空间
Simply put, the column vectors of a matrix span a space through linear combinations.

比如，对这样一个秩为2的矩阵就可以构建出整个二维空间
For example, a rank-2 matrix can construct a two-dimensional space.

我们先写出这个矩阵的列向量的线性组合的数学表达
Let's first write the mathematical expression for the linear combinations of its column vectors.

再在图上画出对应的这两个列向量
Then draw these two column vectors on the graph.

将它们两个加起来，就得到了线性组合的图像化形式
Adding them gives us the graphical form of the linear combination.

调整列向量前的系数，就能得到不同的线性组合
By adjusting the coefficients, we can get different linear combinations.

这两个列向量的线性组合就可以像建构师一样构建出整个二维空间
These linear combinations can construct the entire two-dimensional space, just like an architect.

我们再来构建三维空间
Let's move on to constructing a three-dimensional space.

我们要构建三维空间，则需要一个秩为3的矩阵
To construct a 3D space, we need a rank-3 matrix.

同样，我们先写出三个列向量的线性组合
Similarly, we first write the linear combinations of three column vectors.

然后在图上画出他们三个列向量
Then plot these three column vectors on the graph.

将他们加起来得到线性组合
Adding them together gives us the linear combination.

如果我们调整每个向量前的系数
By adjusting the coefficients for each vector,

他们三个的线性组合，也就是这个绿色的箭头
their linear combination, represented by this green arrow,

就可以构建整个三维空间
can span the entire three-dimensional space.

我们再来构建四维空间
Next, let's construct a four-dimensional space.

此时我们需要一个秩为4的矩阵
This requires a rank-4 matrix.

同样先写出线性组合，并尝试在图上画出他们
Similarly, write the linear combinations and attempt to draw them.

但是在画第四个向量的时候，我们遇到了问题
However, we encounter a problem when plotting the fourth vector.

这个向量，它表示在第四维度上有一个单位长度，我们该怎么画呢？
This vector represents a unit length in the fourth dimension. How should we draw it?

我们可以将现在的三维空间看作一个平面
We can consider the current 3D space as a plane.

将垂直于这个平面的方向看作第四维度w
Treat the direction perpendicular to this plane as the fourth dimension, w.

此时，就可以画出第四个向量
Now, we can draw the fourth vector.

我们下一步是把它们四个加起来，得到他们四个的线性组合
The next step is to add these four vectors to obtain their linear combination.

我们需要先退回到三维世界
We first step back into the 3D world.

先将前三个向量加起来
Add the first three vectors.

再来到四维世界，将第四个向量加进来
Then move into the 4D world and add the fourth vector.

此时，这个白色的箭头就表示这四个向量的线性组合
Now, the white arrow represents the linear combination of these four vectors.

同样，我们调整每个向量前的系数
Similarly, by adjusting the coefficients of each vector,

这个代表线性组合的白色向量，就可以构建出整个四维空间
the white vector can span the entire four-dimensional space.

我们可以想象，每一个平面，其实都代表一个三维世界
We can imagine that each plane represents a 3D world.

矩阵的第三个身份是线性变换魔法师
The third role of a matrix is the wizard of linear transformations.

第一种线性变换是旋转变换
The first type of linear transformation is rotation.

它是旋转矩阵的独有的魔法
It is the unique magic of rotation matrices.

要成为旋转矩阵需要满足两个条件
To become a rotation matrix, two conditions must be met.

先成为正交矩阵
First, it must be an orthogonal matrix.

其次是行列式为1
Second, its determinant must be 1.

这是它们的数学表达方式
This is the mathematical expression.

我们来看这个矩阵A
Let's look at this matrix A.

它是不是旋转矩阵呢？
Is it a rotation matrix?

先来算一下它满不满足第一个条件
First, let's check if it meets the first condition.

第一个条件要求A乘A转置为单位矩阵
The first condition requires A times A transpose to equal the identity matrix.

那么将A的行变为列就得到了A的转置
So, by converting the rows of A into columns, we get its transpose.

再计算矩阵乘法
Next, we compute the matrix multiplication.

这里我通过行列点积的方式进行计算
Here, I calculate it using the row-column dot product method.

得到一个单位矩阵，第一个条件满足
The result is an identity matrix, so the first condition is satisfied.

再来计算A的行列式，看他满不满足第二个条件
Next, we calculate the determinant of A to see if it meets the second condition.

我们沿着第三行展开行列式
We expand the determinant along the third row.

前两项为0，来算第三项
The first two terms are zero; let's calculate the third term.

主对角线相乘减副对角线
Multiply the main diagonal and subtract the secondary diagonal.

最后得到1，满足了第二个条件，所以它是一个旋转矩阵
Finally, we get 1, satisfying the second condition. Therefore, it is a rotation matrix.

但这个矩阵进行的是哪种类型旋转呢？
But what type of rotation does this matrix perform?

我先剧透一下，它是对空间中的点，绕着z轴，旋转任意角度
Spoiler alert: It rotates points in space around the z-axis by any angle.

我们可以对theta取任何值，比如取90度
We can set theta to any value, for example, 90 degrees.

就得到一个新的矩阵
This gives us a new matrix.

取空间中任意一点的坐标，用矩阵左乘这个坐标
Take any point's coordinates in space and multiply them by this matrix.

就会得到结果坐标，我把它画在图上
You'll get the resulting coordinates, which I plot on the graph.

可以看到变换前后的夹角就正好是90度
You can see that the angle between the original and transformed points is exactly 90 degrees.

对一个点是这样，那么对许多点就都是这样
This applies to one point and to many points as well.

点构成线，线构成面
Points form lines, and lines form planes.

将矩阵作用于空间中的物体，比如这个篮球
Apply the matrix to objects in space, such as this basketball.

最终的效果就是将篮球旋转90度
The result is that the basketball is rotated by 90 degrees.

再来看一种有意思的线性变换，投影
Now let's look at another interesting linear transformation: projection.

投影变换是投影矩阵的特殊魔法
Projection transformation is the unique magic of projection matrices.

投影矩阵需要满足这个条件：P平方等于P
Projection matrices must satisfy this condition: \( P^2 = P \).

也就是自身的平方还等于自己，因为投影两次的效果和投影一次是一样的
This means squaring itself still equals itself, as projecting twice has the same effect as projecting once.

举个例子
Here's an example.

有这样一个矩阵P，我们复制一份，来算矩阵乘法
We have this matrix P. Let's duplicate it and calculate the matrix multiplication.

看它满不满足条件
Let's see if it satisfies the condition.

这里我换一种矩阵乘法的计算方式，按列计算
Here, I use a column-by-column calculation method.

效果和之前行列点积是一样的
The result is the same as the row-column dot product method.

你还记得这个运算规则吗？
Do you remember this computation rule?

算出结果，确实和原本的矩阵P一致
The result matches the original matrix P.

所以它确实是一个投影矩阵
So it is indeed a projection matrix.

它会有什么投影效果呢？我们来分析一下
What projection effect does it have? Let's analyze it.

给空间中任意一点x，y，z，左乘投影矩阵，算出结果
Take any point \( (x, y, z) \) in space, multiply it by the projection matrix, and calculate the result.

我们发现，这个点的x，y分量没有变，只有z分量归0了
We find that the x and y components remain unchanged, while the z component becomes zero.

你能想象到它是什么效果吗？
Can you imagine what this effect is?

我们将视角放在宇宙空间，来欣赏一下它的效果
Let's switch our perspective to outer space to appreciate its effect.

